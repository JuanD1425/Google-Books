{"version":3,"sources":["components/Header.js","components/Search.js","components/utils/API.js","components/BookCard.js","components/BookList.js","components/Books.js","App.js","index.js"],"names":["Header","Search","props","className","onSubmit","searchBook","action","onChange","handleSearch","type","deleteBook","id","axios","delete","saveBook","bookData","post","BookCard","event","preventDefault","state","title","author","API","then","res","catch","err","console","log","loadBooks","saved","this","map","book","src","image","alt","publishedDate","onClick","Component","BookList","i","key","volumeInfo","imageLinks","thumbnail","authors","published","publisheddate","Book","e","setState","searchField","target","value","request","get","query","q","data","body","items","Save","App","ReactDOM","render","document","getElementById"],"mappings":"sQAWeA,EATA,WAEX,OACI,gCACI,+C,QCQGC,EAXA,SAAAC,GACb,OACE,yBAAKC,UAAU,UACb,0BAAMC,SAAUF,EAAMG,WAAYC,OAAO,IACvC,2BAAOC,SAAUL,EAAMM,aAAcC,KAAK,SAC1C,4BAAQA,KAAK,UAAb,uB,iCCNM,GAEZC,WAAY,SAASC,GACnB,OAAOC,IAAMC,OAAO,cAAgBF,IAGtCG,SAAU,SAASC,GACjB,OAAOH,IAAMI,KAAK,aAAcD,KCuErBE,E,YAvEX,WAAaf,GAAO,IAAD,8BACf,4CAAMA,KAmBVY,SAAW,SAACI,GACRA,EAAMC,iBAGF,EAAKC,MAAMC,OAAS,EAAKD,MAAME,QAC/BC,EAAIT,SAAS,CACXO,MAAO,EAAKD,MAAMC,MAClBC,OAAQ,EAAKF,MAAME,SAElBE,MAAK,SAAAC,GAAG,OAAI,EAAKX,cACjBY,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA9BjB,EAmCnBjB,WAAa,SAAAC,GACTY,EAAIb,WAAWC,GACZa,MAAK,SAAAC,GAAG,OAAI,EAAKK,eACjBJ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAnC5B,EAAKP,MAAQ,CACTN,SAAU,GACVO,MAAO,GACPC,OAAQ,IANG,E,oHA6CV,IAAD,OAEAS,EAAQC,KAAKZ,MAAMN,SAASmB,KAAI,SAACC,GACjC,OACA,6BAAM,EAAKhC,MAAMmB,UAMzB,OACI,yBAAKlB,UAAU,QACX,yBAAKgC,IAAKH,KAAK9B,MAAMkC,MAAOC,IAAI,KAChC,6BACA,sCAAYL,KAAK9B,MAAMmB,OACvB,wCAAcW,KAAK9B,MAAMoB,QACzB,wBAAInB,UAAU,QAAd,eAAkC6B,KAAK9B,MAAMoC,eAC7C,4BAEAC,QAASR,GAFT,mB,GA/DWS,aCcRC,EAnBE,SAAAvC,GAEb,OAAS,yBACDC,UAAY,QADX,IAEDD,EAAMgC,KAAKD,KAAI,SAACC,EAAMQ,GAClB,OAAS,kBACL,EADK,CACIC,IAAQD,EACjBN,MAAUF,EAAKU,WAAWC,WAAWC,UACrCzB,MAAUa,EAAKU,WAAWvB,MAC1BC,OAAWY,EAAKU,WAAWG,QAC3BC,UAAcd,EAAKU,WAAWK,mBARrC,MCyCEC,E,YAvCX,WAAYhD,GAAQ,IAAD,8BACf,4CAAMA,KASVM,aAAe,SAAA2C,GAEX,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZvB,EAenBlD,WAAa,SAAA8C,GACTA,EAAEhC,iBACFqC,IACKC,IAAI,gDACJC,MAAM,CAAEC,EAAG,EAAKvC,MAAMiC,cACtB7B,MAAK,SAAAoC,GACF,EAAKR,SAAS,CAAElB,KAAK,YAAK0B,EAAKC,KAAKC,aAnB5C,EAAK1C,MAAQ,CACTc,KAAM,GACNmB,YAAa,GACbU,KAAM,IALK,E,sEA0Bf,OAAS,6BAEL,kBACA,EADA,CACO1D,WAAe2B,KAAK3B,WAC3BG,aAAiBwB,KAAKxB,eACnB,IALE,IAKG,kBACR,EADQ,CACC0B,KAASF,KAAKZ,MAAMc,OAC1B,IAPE,S,GA5BEM,aCcJwB,G,uLAZP,OAAS,yBACD7D,UAAY,OAChB,kBACA,EADA,MAEA,kBACA,EADA,W,GANMqC,cCClByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.94383f5c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\n    return(\n        <header>\n            <h1> Google Books</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\n//enter props in the parameter to acces the properties passed down from the book.js file\nconst Search = props => {\n  return (\n    <div className=\"search\">\n      <form onSubmit={props.searchBook} action=\"\">\n        <input onChange={props.handleSearch} type=\"text\" />\n        <button type=\"submit\">Search your book</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import axios from 'axios';\n\nexport default{\n    // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","import React, {Component} from 'react';\nimport API from \"../components/utils/API\";\n\n\n\n\n\n\nclass BookCard extends Component {\n    constructor (props){\n        super(props);\n\n        this.state = {\n            saveBook: [],\n            title: \"\",\n            author: \"\"\n        }\n\n    };\n\n\n    componentWillMount(){\n    \n      \n    }\n        \n    \n\n\n    saveBook = (event) =>{\n        event.preventDefault();\n        \n\n        if (this.state.title && this.state.author) {\n            API.saveBook({\n              title: this.state.title,\n              author: this.state.author,\n            })\n              .then(res => this.saveBook())\n              .catch(err => console.log(err));\n          } \n    }\n\n\n    deleteBook = id => {\n        API.deleteBook(id)\n          .then(res => this.loadBooks())\n          .catch(err => console.log(err));\n    };\n\n\n    \n\n\n    render(){\n\n        let saved = this.state.saveBook.map((book)=> {\n            return(\n            <div>{this.props.title}</div>\n            )\n        })\n\n\n\n    return(\n        <div className=\"list\">\n            <img src={this.props.image} alt=\"\"/>\n            <div>\n            <h2>Title: {this.props.title}</h2>\n            <h3> Author: {this.props.author}</h3>\n            <h3 className=\"font\"> Published: {this.props.publishedDate}</h3>\n            <button \n            \n            onClick={saved} >Save Book</button>\n            </div>\n        </div>\n    )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './BookCard';\n\nconst BookList = props => {\n    //this will render the the books from the response\n    return ( <\n        div className = 'list' > {\n            props.book.map((book, i) => {\n                return ( <\n                    BookCard key = { i }\n                    image = { book.volumeInfo.imageLinks.thumbnail }\n                    title = { book.volumeInfo.title }\n                    author = { book.volumeInfo.authors }\n                    published = { book.volumeInfo.publisheddate }\n                    />\n                );\n            })\n        } <\n        /div>\n    );\n};\n\nexport default BookList;","import React, { Component } from 'react';\nimport Search from './Search';\nimport request from 'superagent';\nimport BookList from './BookList';\n\nclass Book extends Component {\n    //logic\n    constructor(props) {\n        super(props);\n        this.state = {\n            book: [],\n            searchField: '',\n            Save: []\n        };\n    }\n\n    //methods\n    handleSearch = e => {\n        //this state will handle the the information entered in the search box. this 'event' must be entered to the search component to connect them.\n        this.setState({ searchField: e.target.value });\n    };\n\n    searchBook = e => {\n        e.preventDefault();\n        request\n            .get('https://www.googleapis.com/books/v1/volumes?')\n            .query({ q: this.state.searchField })\n            .then(data => {\n                this.setState({ book: [...data.body.items] });\n            });\n    };\n\n    render() {\n        return ( <\n            div >\n            <\n            Search searchBook = { this.searchBook }\n            handleSearch = { this.handleSearch }\n            />{' '} <\n            BookList book = { this.state.book }\n            />{' '} <\n            /div>\n        );\n    }\n}\n\nexport default Book;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Book from './components/Books';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return ( <\n            div className = 'App' >\n            <\n            Header / >\n            <\n            Book / >\n            <\n            /div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}